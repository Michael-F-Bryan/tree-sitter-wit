===========
Basic world
===========

world foo { }

---

(source_file
  (world_item
    (id)
    (world_body)))

===========================
World with interface export
===========================

world console {
    export run: interface {}
}

---

(source_file
  (world_item
    (id)
    (world_body
      (world_items
        (export_item
          (id)
          (extern_type
            (interface_body)))))))

==========================
World with function export
==========================

world foo {
    export run: func();
}

---

(source_file
  (world_item
    (id)
    (world_body
      (world_items
        (export_item
          (id)
          (extern_type
            (func_type
              (param_list))))))))

=================
World with import
=================

world command {
  import wasi:filesystem/filesystem;
}

---

(source_file
  (world_item
    (id)
    (world_body
      (world_items
        (import_item
          (use_path
            (fully_qualified_use_path
              (id)
              (id)
              (id))))))))

==================
World with include
==================

world foo {
     include bar;
}

---

(source_file
  (world_item
    (id)
    (world_body
      (world_items
        (include_item
          (use_path
            (id)))))))

==========================
World with include aliased
==========================

world foo {
    include wasi:io/my-world-v1 with { a as a1, b as b1 };
}

---

(source_file
  (world_item
    (id)
    (world_body
      (world_items
        (include_item
          (use_path
            (fully_qualified_use_path
              (id)
              (id)
              (id)))
          (include_names_body
            (include_names_list
              (include_names_item
                (id)
                (id))
              (include_names_item
                (id)
                (id)))))))))

==============
World with use
==============

world command {
  use wasi:filesystem/filesystem.{errno};
}

---

(source_file
  (world_item
    (id)
    (world_body
      (world_items
        (use_item
          (use_path
            (fully_qualified_use_path
              (id)
              (id)
              (id)))
          (use_names_list
            (use_names_item
              (id))))))))

===================
Worlds Kitchen Sink
===================

world imports {
    import streams;
    export streams;

    import iface-name: interface {
        type some-name = u32;
        foo: func(p: string) -> result<u32, aaa>;
    }
    export iface-name: interface {
        type some-name = u32;
        foo: func(p: string) -> result<u32, aaa>;
    }

    import foo: func(p: string) -> result<u32, aaa>;
}

---

(source_file
  (world_item
    name: (id)
    body: (world_body
      world_items: (world_items
        import_item: (import_item
          (use_path
            (id))))
      world_items: (world_items
        export_item: (export_item
          (use_path
            (id))))
      world_items: (world_items
        import_item: (import_item
          name: (id)
          (extern_type
            (interface_body
              interface_items: (interface_items
                typedef: (typedef_item
                  (type_item
                    alias: (id)
                    type: (ty
                      (builtin)))))
              interface_items: (interface_items
                func: (func_item
                  name: (id)
                  (func_type
                    param_list: (param_list
                      (named_type_list
                        (named_type
                          name: (id)
                          type: (ty
                            (builtin)))))
                    result_list: (result_list
                      (ty
                        (result
                          ok: (ty
                            (builtin))
                          err: (ty
                            (id))))))))))))
      world_items: (world_items
        export_item: (export_item
          name: (id)
          (extern_type
            (interface_body
              interface_items: (interface_items
                typedef: (typedef_item
                  (type_item
                    alias: (id)
                    type: (ty
                      (builtin)))))
              interface_items: (interface_items
                func: (func_item
                  name: (id)
                  (func_type
                    param_list: (param_list
                      (named_type_list
                        (named_type
                          name: (id)
                          type: (ty
                            (builtin)))))
                    result_list: (result_list
                      (ty
                        (result
                          ok: (ty
                            (builtin))
                          err: (ty
                            (id))))))))))))
      world_items: (world_items
        import_item: (import_item
          name: (id)
          (extern_type
            (func_type
              param_list: (param_list
                (named_type_list
                  (named_type
                    name: (id)
                    type: (ty
                      (builtin)))))
              result_list: (result_list
                (ty
                  (result
                    ok: (ty
                      (builtin))
                    err: (ty
                      (id))))))))))))
